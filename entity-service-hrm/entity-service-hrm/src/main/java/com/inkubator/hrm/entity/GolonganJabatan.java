package com.inkubator.hrm.entity;
// Generated Mar 6, 2014 12:14:43 PM by Hibernate Tools 3.6.0


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * GolonganJabatan generated by hbm2java
 */
@Entity
@Table(name="golongan_jabatan"
    ,catalog="hrm"
    , uniqueConstraints = @UniqueConstraint(columnNames="golongan_jabatan_code") 
)
public class GolonganJabatan  implements java.io.Serializable {


     private long id;
     private Integer version;
     private Pangkat pangkat;
     private String golonganJabatanCode;
     private Integer kelompok;
     private Integer lembur;
     private String createdBy;
     private Date createdOn;
     private String updatedBy;
     private Date upatedOn;
     private Set<Position> positions = new HashSet<Position>(0);

    public GolonganJabatan() {
    }

	
    public GolonganJabatan(long id) {
        this.id = id;
    }
    public GolonganJabatan(long id, Pangkat pangkat, String golonganJabatanCode, Integer kelompok, Integer lembur, String createdBy, Date createdOn, String updatedBy, Date upatedOn, Set<Position> positions) {
       this.id = id;
       this.pangkat = pangkat;
       this.golonganJabatanCode = golonganJabatanCode;
       this.kelompok = kelompok;
       this.lembur = lembur;
       this.createdBy = createdBy;
       this.createdOn = createdOn;
       this.updatedBy = updatedBy;
       this.upatedOn = upatedOn;
       this.positions = positions;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public long getId() {
        return this.id;
    }
    
    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name="version")
    public Integer getVersion() {
        return this.version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="pangkat_id")
    public Pangkat getPangkat() {
        return this.pangkat;
    }
    
    public void setPangkat(Pangkat pangkat) {
        this.pangkat = pangkat;
    }

    
    @Column(name="golongan_jabatan_code", unique=true, length=4)
    public String getGolonganJabatanCode() {
        return this.golonganJabatanCode;
    }
    
    public void setGolonganJabatanCode(String golonganJabatanCode) {
        this.golonganJabatanCode = golonganJabatanCode;
    }

    
    @Column(name="kelompok")
    public Integer getKelompok() {
        return this.kelompok;
    }
    
    public void setKelompok(Integer kelompok) {
        this.kelompok = kelompok;
    }

    
    @Column(name="lembur")
    public Integer getLembur() {
        return this.lembur;
    }
    
    public void setLembur(Integer lembur) {
        this.lembur = lembur;
    }

    
    @Column(name="created_by", length=45)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_on", length=19)
    public Date getCreatedOn() {
        return this.createdOn;
    }
    
    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    
    @Column(name="updated_by", length=45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="upated_on", length=19)
    public Date getUpatedOn() {
        return this.upatedOn;
    }
    
    public void setUpatedOn(Date upatedOn) {
        this.upatedOn = upatedOn;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="golonganJabatan")
    public Set<Position> getPositions() {
        return this.positions;
    }
    
    public void setPositions(Set<Position> positions) {
        this.positions = positions;
    }




}


