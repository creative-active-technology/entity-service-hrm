package com.inkubator.hrm.entity;
// Generated Mar 6, 2014 12:14:43 PM by Hibernate Tools 3.6.0


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * PhysicalAbilityPosition generated by hbm2java
 */
@Entity
@Table(name="physical_ability_position"
    ,catalog="hrm"
)
public class PhysicalAbilityPosition  implements java.io.Serializable {


     private PhysicalAbilityPositionId id;
     private Position position;
     private PhysicalAbility physicalAbility;
     private Integer skor;

    public PhysicalAbilityPosition() {
    }

	
    public PhysicalAbilityPosition(PhysicalAbilityPositionId id, Position position, PhysicalAbility physicalAbility) {
        this.id = id;
        this.position = position;
        this.physicalAbility = physicalAbility;
    }
    public PhysicalAbilityPosition(PhysicalAbilityPositionId id, Position position, PhysicalAbility physicalAbility, Integer skor) {
       this.id = id;
       this.position = position;
       this.physicalAbility = physicalAbility;
       this.skor = skor;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="physicalAbilityId", column=@Column(name="physical_ability_id", nullable=false) ), 
        @AttributeOverride(name="positionId", column=@Column(name="position_id", nullable=false) ) } )
    public PhysicalAbilityPositionId getId() {
        return this.id;
    }
    
    public void setId(PhysicalAbilityPositionId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="position_id", nullable=false, insertable=false, updatable=false)
    public Position getPosition() {
        return this.position;
    }
    
    public void setPosition(Position position) {
        this.position = position;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="physical_ability_id", nullable=false, insertable=false, updatable=false)
    public PhysicalAbility getPhysicalAbility() {
        return this.physicalAbility;
    }
    
    public void setPhysicalAbility(PhysicalAbility physicalAbility) {
        this.physicalAbility = physicalAbility;
    }

    
    @Column(name="skor")
    public Integer getSkor() {
        return this.skor;
    }
    
    public void setSkor(Integer skor) {
        this.skor = skor;
    }




}


